name: "ContinuousIntegration"

on:
    pull_request:
        branches: [main]
        types: [opened, edited, reopened, synchronize]

jobs:
    code-quality:
        name: "Code quality"
        runs-on: "ubuntu-latest"
        steps:
            -
                name: "[GITHUB] Checkout"
                uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # version 3.0.2
                with:
                    # Full git history is needed to get a proper list of changed files within `super-linter`
                    fetch-depth: 0
            -
                name: "[GITHUB / OSS] Lint Code Base"
                uses: github/super-linter@01d3218744765b55c3b5ffbb27e50961e50c33c5 # version 4.9.6
                env:
                    DEFAULT_BRANCH: 'main'
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    VALIDATE_ALL_CODEBASE: false
                    VALIDATE_BASH: true
                    VALIDATE_BASH_EXEC: true
                    VALIDATE_DOCKERFILE_HADOLINT: true
                    VALIDATE_EDITORCONFIG: true
                    VALIDATE_ENV: true
                    VALIDATE_GITHUB_ACTIONS: true
                    VALIDATE_GITLEAKS: true
                    VALIDATE_JSCPD: true
                    VALIDATE_MARKDOWN: true
                    VALIDATE_SHELL_SHFMT: true
                    VALIDATE_YAML: true

    build-docker-image:
        name: "Build the Docker images"
        runs-on: "ubuntu-latest"
        needs: [code-quality]
        strategy:
            matrix:
                php-version: ["7.4", "8.0", "8.1"]
        steps:
            -
                name: "[GITHUB] Checkout"
                uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # version 3.0.2
            -
                name: "[INTERNAL] Metadata"
                uses: ./.github/actions/metadata
                id: metadata
                with:
                    PHP_VERSION: ${{ matrix.php-version }}
            -
                name: "[INTERNAL] Build & Push"
                uses: ./.github/actions/build-and-push
                with:
                    GITHUB_ACTOR: ${{ github.actor }}
                    GITHUB_SHA: ${{ github.sha }}
                    GITHUB_TOKEN: ${{ secrets.CI_PACKAGES_TOKEN }}
                    METADATA_LABELS: ${{ steps.metadata.outputs.labels }}
                    METADATA_TAGS: ${{ steps.metadata.outputs.tags }}
                    METADATA_VERSION: ${{ steps.metadata.outputs.version }}
                    PHP_VERSION: ${{ matrix.php-version }}

#    security-scan-docker-image-by-trivy:
#        name: "Security scan by Trivy"
#        runs-on: "ubuntu-latest"
#        needs: [build-docker-image]
#        strategy:
#            matrix:
#                php-version: ["7.4", "8.0", "8.1"]
#        steps:
#            -
#                name: "[GITHUB] Checkout"
#                uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # version 3.0.2
#            -
#                name: "[INTERNAL] Metadata"
#                uses: ./.github/actions/metadata
#                id: metadata
#                with:
#                    PHP_VERSION: ${{ matrix.php-version }}
#            -
#                name: "[DOCKER] Login to GitHub Container Registry"
#                uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # version 2.0.0
#                with:
#                    registry: 'ghcr.io'
#                    username: ${{ github.actor }}
#                    password: ${{ secrets.CI_PACKAGES_TOKEN }}
#            -
#                name: "[AQUA SECURITY] Run Trivy vulnerability scanner"
#                uses: aquasecurity/trivy-action@d63413b0a4a4482237085319f7f4a1ce99a8f2ac # version 0.7.1
#                with:
#                    scan-type: 'image'
#                    image-ref: ${{ steps.metadata.outputs.tags }}
#                    format: 'table'
#                    vuln-type: 'os,library'
#                    severity: 'CRITICAL,HIGH'

    security-scan-docker-image-by-grype:
        name: "Security scan by Grype"
        runs-on: "ubuntu-latest"
        needs: [build-docker-image]
        strategy:
            matrix:
                php-version: ["7.4", "8.0", "8.1"]
        steps:
            -
                name: "[GITHUB] Checkout"
                uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # version 3.0.2
            -
                name: "[INTERNAL] Metadata"
                uses: ./.github/actions/metadata
                id: metadata
                with:
                    PHP_VERSION: ${{ matrix.php-version }}
            -
                name: "[DOCKER] Login to GitHub Container Registry"
                uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # version 2.0.0
                with:
                    registry: 'ghcr.io'
                    username: ${{ github.actor }}
                    password: ${{ secrets.CI_PACKAGES_TOKEN }}
            -
                name: "[ANCHORE] Run Grype vulnerability scanner"
                uses: anchore/scan-action@ecfd0e98932e57ea8f68f29c4f418fc41a8194db # version 3.2.5
                with:
                    image: ${{ steps.metadata.outputs.tags }}
